INFO  16:48:21,813 - Compiling source file: C:\Users\Dusan\Desktop\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:48:21,816 - #2 program
INFO  16:48:21,816 - #39 test302
INFO  16:48:21,816 - #31 enum
INFO  16:48:21,816 - #39 IncrementType
INFO  16:48:21,816 - #3 {
INFO  16:48:21,816 - #39 BY_ONE
INFO  16:48:21,817 - #8 ,
INFO  16:48:21,817 - #39 DOUBLE_VALUE
INFO  16:48:21,817 - #4 }
INFO  16:48:21,817 - #39 int
INFO  16:48:21,817 - #39 i
INFO  16:48:21,817 - #5 ;
INFO  16:48:21,817 - #39 bool
INFO  16:48:21,817 - #39 ibool
INFO  16:48:21,817 - #5 ;
INFO  16:48:21,817 - #28 const
INFO  16:48:21,817 - #39 char
INFO  16:48:21,817 - #39 kva
INFO  16:48:21,817 - #12 =
INFO  16:48:21,817 - #44 a
INFO  16:48:21,817 - #5 ;
INFO  16:48:21,817 - #39 char
INFO  16:48:21,817 - #39 p
INFO  16:48:21,817 - #5 ;
INFO  16:48:21,817 - #39 int
INFO  16:48:21,818 - #39 niz
INFO  16:48:21,818 - #20 [
INFO  16:48:21,818 - #21 ]
INFO  16:48:21,818 - #5 ;
INFO  16:48:21,818 - #3 {
INFO  16:48:21,818 - #39 int
INFO  16:48:21,818 - #39 sum
INFO  16:48:21,818 - #6 (
INFO  16:48:21,818 - #39 int
INFO  16:48:21,818 - #39 z
INFO  16:48:21,818 - #8 ,
INFO  16:48:21,818 - #39 int
INFO  16:48:21,818 - #39 d
INFO  16:48:21,818 - #7 )
INFO  16:48:21,818 - #3 {
INFO  16:48:21,818 - #10 return
INFO  16:48:21,818 - #39 z
INFO  16:48:21,818 - #11 +
INFO  16:48:21,818 - #39 d
INFO  16:48:21,818 - #5 ;
INFO  16:48:21,818 - #4 }
INFO  16:48:21,818 - #39 int
INFO  16:48:21,818 - #39 inkrement
INFO  16:48:21,818 - #6 (
INFO  16:48:21,818 - #39 int
INFO  16:48:21,818 - #39 a
INFO  16:48:21,818 - #8 ,
INFO  16:48:21,819 - #39 IncrementType
INFO  16:48:21,819 - #39 type
INFO  16:48:21,819 - #7 )
INFO  16:48:21,819 - #39 int
INFO  16:48:21,819 - #39 pom
INFO  16:48:21,819 - #5 ;
INFO  16:48:21,819 - #3 {
INFO  16:48:21,819 - #40 if
INFO  16:48:21,819 - #6 (
INFO  16:48:21,819 - #39 type
INFO  16:48:21,819 - #32 ==
INFO  16:48:21,819 - #39 IncrementType
INFO  16:48:21,819 - #22 .
INFO  16:48:21,819 - #39 BY_ONE
INFO  16:48:21,819 - #7 )
INFO  16:48:21,819 - #39 pom
INFO  16:48:21,819 - #12 =
INFO  16:48:21,819 - #38 1
INFO  16:48:21,819 - #5 ;
INFO  16:48:21,819 - #41 else
INFO  16:48:21,819 - #40 if
INFO  16:48:21,819 - #6 (
INFO  16:48:21,819 - #39 type
INFO  16:48:21,820 - #32 ==
INFO  16:48:21,820 - #39 IncrementType
INFO  16:48:21,820 - #22 .
INFO  16:48:21,820 - #39 DOUBLE_VALUE
INFO  16:48:21,820 - #7 )
INFO  16:48:21,820 - #39 pom
INFO  16:48:21,820 - #12 =
INFO  16:48:21,820 - #39 a
INFO  16:48:21,820 - #5 ;
INFO  16:48:21,820 - #10 return
INFO  16:48:21,820 - #39 sum
INFO  16:48:21,820 - #6 (
INFO  16:48:21,820 - #39 a
INFO  16:48:21,820 - #8 ,
INFO  16:48:21,820 - #39 pom
INFO  16:48:21,820 - #7 )
INFO  16:48:21,820 - #5 ;
INFO  16:48:21,820 - #4 }
INFO  16:48:21,820 - #13 void
INFO  16:48:21,820 - #39 main
INFO  16:48:21,820 - #6 (
INFO  16:48:21,820 - #7 )
INFO  16:48:21,820 - #3 {
INFO  16:48:21,821 - #39 sum
INFO  16:48:21,821 - #6 (
INFO  16:48:21,821 - #38 1
INFO  16:48:21,821 - #8 ,
INFO  16:48:21,821 - #38 2
INFO  16:48:21,821 - #7 )
INFO  16:48:21,821 - #5 ;
INFO  16:48:21,821 - #39 p
INFO  16:48:21,821 - #12 =
INFO  16:48:21,821 - #39 kva
INFO  16:48:21,821 - #5 ;
INFO  16:48:21,821 - #39 niz
INFO  16:48:21,821 - #12 =
INFO  16:48:21,821 - #39 null
INFO  16:48:21,821 - #5 ;
INFO  16:48:21,821 - #40 if
INFO  16:48:21,821 - #6 (
INFO  16:48:21,822 - #38 1
INFO  16:48:21,822 - #33 !=
INFO  16:48:21,822 - #38 1
INFO  16:48:21,822 - #7 )
INFO  16:48:21,822 - #9 print
INFO  16:48:21,822 - #6 (
INFO  16:48:21,822 - #15 -
INFO  16:48:21,822 - #38 6
INFO  16:48:21,822 - #7 )
INFO  16:48:21,822 - #5 ;
INFO  16:48:21,822 - #41 else
INFO  16:48:21,822 - #9 print
INFO  16:48:21,822 - #6 (
INFO  16:48:21,822 - #38 0
INFO  16:48:21,822 - #7 )
INFO  16:48:21,822 - #5 ;
INFO  16:48:21,822 - #39 ibool
INFO  16:48:21,825 - #12 =
INFO  16:48:21,825 - #30 false
INFO  16:48:21,825 - #5 ;
INFO  16:48:21,825 - #39 i
INFO  16:48:21,826 - #12 =
INFO  16:48:21,826 - #38 0
INFO  16:48:21,826 - #5 ;
INFO  16:48:21,826 - #23 for
INFO  16:48:21,826 - #6 (
INFO  16:48:21,826 - #39 i
INFO  16:48:21,826 - #12 =
INFO  16:48:21,826 - #38 0
INFO  16:48:21,826 - #5 ;
INFO  16:48:21,826 - #39 i
INFO  16:48:21,826 - #35 <
INFO  16:48:21,826 - #38 5
INFO  16:48:21,826 - #5 ;
INFO  16:48:21,826 - #39 i
INFO  16:48:21,826 - #42 ++
INFO  16:48:21,826 - #7 )
INFO  16:48:21,826 - #3 {
INFO  16:48:21,826 - #40 if
INFO  16:48:21,826 - #6 (
INFO  16:48:21,826 - #39 i
INFO  16:48:21,826 - #32 ==
INFO  16:48:21,826 - #38 2
INFO  16:48:21,826 - #7 )
INFO  16:48:21,826 - #39 ibool
INFO  16:48:21,826 - #12 =
INFO  16:48:21,826 - #29 true
INFO  16:48:21,826 - #5 ;
INFO  16:48:21,826 - #4 }
INFO  16:48:21,826 - #40 if
INFO  16:48:21,826 - #6 (
INFO  16:48:21,826 - #39 ibool
INFO  16:48:21,826 - #7 )
INFO  16:48:21,826 - #40 if
INFO  16:48:21,826 - #6 (
INFO  16:48:21,826 - #39 i
INFO  16:48:21,827 - #32 ==
INFO  16:48:21,827 - #38 5
INFO  16:48:21,827 - #7 )
INFO  16:48:21,827 - #9 print
INFO  16:48:21,827 - #6 (
INFO  16:48:21,827 - #38 1
INFO  16:48:21,827 - #7 )
INFO  16:48:21,827 - #5 ;
INFO  16:48:21,827 - #41 else
INFO  16:48:21,827 - #9 print
INFO  16:48:21,827 - #6 (
INFO  16:48:21,827 - #15 -
INFO  16:48:21,827 - #38 1
INFO  16:48:21,827 - #7 )
INFO  16:48:21,827 - #5 ;
INFO  16:48:21,827 - #39 niz
INFO  16:48:21,827 - #12 =
INFO  16:48:21,827 - #19 new
INFO  16:48:21,827 - #39 int
INFO  16:48:21,828 - #20 [
INFO  16:48:21,828 - #38 3
INFO  16:48:21,828 - #21 ]
INFO  16:48:21,828 - #5 ;
INFO  16:48:21,828 - #39 niz
INFO  16:48:21,828 - #20 [
INFO  16:48:21,828 - #38 0
INFO  16:48:21,828 - #21 ]
INFO  16:48:21,828 - #12 =
INFO  16:48:21,828 - #38 1
INFO  16:48:21,828 - #5 ;
INFO  16:48:21,828 - #39 niz
INFO  16:48:21,828 - #20 [
INFO  16:48:21,828 - #38 1
INFO  16:48:21,828 - #21 ]
INFO  16:48:21,828 - #12 =
INFO  16:48:21,828 - #38 2
INFO  16:48:21,828 - #5 ;
INFO  16:48:21,828 - #39 niz
INFO  16:48:21,828 - #20 [
INFO  16:48:21,828 - #38 2
INFO  16:48:21,828 - #21 ]
INFO  16:48:21,828 - #12 =
INFO  16:48:21,828 - #39 sum
INFO  16:48:21,828 - #6 (
INFO  16:48:21,828 - #39 niz
INFO  16:48:21,828 - #20 [
INFO  16:48:21,828 - #38 1
INFO  16:48:21,828 - #21 ]
INFO  16:48:21,828 - #8 ,
INFO  16:48:21,828 - #39 niz
INFO  16:48:21,828 - #20 [
INFO  16:48:21,828 - #38 0
INFO  16:48:21,828 - #21 ]
INFO  16:48:21,828 - #7 )
INFO  16:48:21,828 - #11 +
INFO  16:48:21,828 - #38 1
INFO  16:48:21,828 - #5 ;
INFO  16:48:21,828 - #40 if
INFO  16:48:21,828 - #6 (
INFO  16:48:21,828 - #39 niz
INFO  16:48:21,828 - #20 [
INFO  16:48:21,828 - #38 2
INFO  16:48:21,828 - #21 ]
INFO  16:48:21,828 - #32 ==
INFO  16:48:21,829 - #38 4
INFO  16:48:21,829 - #7 )
INFO  16:48:21,829 - #9 print
INFO  16:48:21,829 - #6 (
INFO  16:48:21,829 - #39 ord
INFO  16:48:21,829 - #6 (
INFO  16:48:21,829 - #44 A
INFO  16:48:21,829 - #7 )
INFO  16:48:21,829 - #7 )
INFO  16:48:21,829 - #5 ;
INFO  16:48:21,829 - #41 else
INFO  16:48:21,829 - #9 print
INFO  16:48:21,829 - #6 (
INFO  16:48:21,829 - #39 ord
INFO  16:48:21,829 - #6 (
INFO  16:48:21,829 - #44 a
INFO  16:48:21,829 - #7 )
INFO  16:48:21,829 - #7 )
INFO  16:48:21,829 - #5 ;
INFO  16:48:21,830 - #9 print
INFO  16:48:21,830 - #6 (
INFO  16:48:21,830 - #39 eol
INFO  16:48:21,830 - #7 )
INFO  16:48:21,830 - #5 ;
INFO  16:48:21,830 - #39 i
INFO  16:48:21,830 - #12 =
INFO  16:48:21,830 - #38 0
INFO  16:48:21,830 - #5 ;
INFO  16:48:21,830 - #23 for
INFO  16:48:21,830 - #6 (
INFO  16:48:21,830 - #5 ;
INFO  16:48:21,830 - #39 i
INFO  16:48:21,830 - #35 <
INFO  16:48:21,830 - #38 10
INFO  16:48:21,830 - #5 ;
INFO  16:48:21,830 - #7 )
INFO  16:48:21,830 - #3 {
INFO  16:48:21,830 - #40 if
INFO  16:48:21,830 - #6 (
INFO  16:48:21,830 - #39 i
INFO  16:48:21,830 - #32 ==
INFO  16:48:21,830 - #38 3
INFO  16:48:21,830 - #7 )
INFO  16:48:21,830 - #3 {
INFO  16:48:21,830 - #39 i
INFO  16:48:21,830 - #42 ++
INFO  16:48:21,831 - #5 ;
INFO  16:48:21,831 - #25 continue
INFO  16:48:21,831 - #5 ;
INFO  16:48:21,831 - #4 }
INFO  16:48:21,831 - #40 if
INFO  16:48:21,831 - #6 (
INFO  16:48:21,831 - #39 i
INFO  16:48:21,831 - #32 ==
INFO  16:48:21,831 - #38 4
INFO  16:48:21,831 - #7 )
INFO  16:48:21,831 - #24 break
INFO  16:48:21,831 - #5 ;
INFO  16:48:21,831 - #39 i
INFO  16:48:21,831 - #12 =
INFO  16:48:21,831 - #39 inkrement
INFO  16:48:21,831 - #6 (
INFO  16:48:21,831 - #39 i
INFO  16:48:21,831 - #8 ,
INFO  16:48:21,831 - #39 IncrementType
INFO  16:48:21,831 - #22 .
INFO  16:48:21,831 - #39 BY_ONE
INFO  16:48:21,831 - #7 )
INFO  16:48:21,831 - #5 ;
INFO  16:48:21,831 - #4 }
INFO  16:48:21,831 - #40 if
INFO  16:48:21,831 - #6 (
INFO  16:48:21,831 - #39 i
INFO  16:48:21,832 - #32 ==
INFO  16:48:21,832 - #38 3
INFO  16:48:21,832 - #7 )
INFO  16:48:21,832 - #9 print
INFO  16:48:21,832 - #6 (
INFO  16:48:21,832 - #38 4
INFO  16:48:21,832 - #7 )
INFO  16:48:21,832 - #5 ;
INFO  16:48:21,832 - #41 else
INFO  16:48:21,832 - #9 print
INFO  16:48:21,832 - #6 (
INFO  16:48:21,832 - #15 -
INFO  16:48:21,832 - #38 4
INFO  16:48:21,832 - #7 )
INFO  16:48:21,832 - #5 ;
INFO  16:48:21,832 - #14 read
INFO  16:48:21,832 - #6 (
INFO  16:48:21,832 - #39 niz
INFO  16:48:21,832 - #20 [
INFO  16:48:21,832 - #38 0
INFO  16:48:21,832 - #21 ]
INFO  16:48:21,832 - #7 )
INFO  16:48:21,832 - #5 ;
INFO  16:48:21,832 - #14 read
INFO  16:48:21,832 - #6 (
INFO  16:48:21,832 - #39 niz
INFO  16:48:21,832 - #20 [
INFO  16:48:21,832 - #38 1
INFO  16:48:21,832 - #21 ]
INFO  16:48:21,832 - #7 )
INFO  16:48:21,832 - #5 ;
INFO  16:48:21,832 - #14 read
INFO  16:48:21,832 - #6 (
INFO  16:48:21,832 - #39 niz
INFO  16:48:21,832 - #20 [
INFO  16:48:21,832 - #38 2
INFO  16:48:21,832 - #21 ]
INFO  16:48:21,832 - #7 )
INFO  16:48:21,832 - #5 ;
INFO  16:48:21,832 - #9 print
INFO  16:48:21,832 - #6 (
INFO  16:48:21,832 - #39 eol
INFO  16:48:21,833 - #7 )
INFO  16:48:21,833 - #5 ;
INFO  16:48:21,833 - #9 print
INFO  16:48:21,833 - #6 (
INFO  16:48:21,833 - #39 sum
INFO  16:48:21,833 - #6 (
INFO  16:48:21,833 - #39 sum
INFO  16:48:21,833 - #6 (
INFO  16:48:21,833 - #39 niz
INFO  16:48:21,833 - #20 [
INFO  16:48:21,833 - #38 0
INFO  16:48:21,833 - #21 ]
INFO  16:48:21,833 - #8 ,
INFO  16:48:21,833 - #39 niz
INFO  16:48:21,833 - #20 [
INFO  16:48:21,833 - #38 1
INFO  16:48:21,833 - #21 ]
INFO  16:48:21,833 - #7 )
INFO  16:48:21,833 - #8 ,
INFO  16:48:21,833 - #39 niz
INFO  16:48:21,833 - #20 [
INFO  16:48:21,833 - #38 2
INFO  16:48:21,833 - #21 ]
INFO  16:48:21,833 - #7 )
INFO  16:48:21,833 - #7 )
INFO  16:48:21,833 - #5 ;
INFO  16:48:21,833 - #9 print
INFO  16:48:21,833 - #6 (
INFO  16:48:21,833 - #39 eol
INFO  16:48:21,833 - #7 )
INFO  16:48:21,833 - #5 ;
INFO  16:48:21,833 - #9 print
INFO  16:48:21,833 - #6 (
INFO  16:48:21,833 - #39 inkrement
INFO  16:48:21,833 - #6 (
INFO  16:48:21,833 - #39 niz
INFO  16:48:21,833 - #20 [
INFO  16:48:21,833 - #38 2
INFO  16:48:21,833 - #21 ]
INFO  16:48:21,833 - #8 ,
INFO  16:48:21,833 - #39 IncrementType
INFO  16:48:21,833 - #22 .
INFO  16:48:21,833 - #39 DOUBLE_VALUE
INFO  16:48:21,833 - #7 )
INFO  16:48:21,833 - #7 )
INFO  16:48:21,833 - #5 ;
INFO  16:48:21,833 - #10 return
INFO  16:48:21,833 - #5 ;
INFO  16:48:21,833 - #4 }
INFO  16:48:21,833 - #4 }
